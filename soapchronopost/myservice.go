// Code generated by gowsdl DO NOT EDIT.

package myservice

import (
	"context"
	"encoding/xml"
	"github.com/hooklift/gowsdl/soap"
	"time"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

type ShipperValue struct {
	ShipperAdress1 string `xml:"shipperAdress1,omitempty" json:"shipperAdress1,omitempty"`

	ShipperAdress2 string `xml:"shipperAdress2,omitempty" json:"shipperAdress2,omitempty"`

	ShipperCity string `xml:"shipperCity,omitempty" json:"shipperCity,omitempty"`

	ShipperCivility string `xml:"shipperCivility,omitempty" json:"shipperCivility,omitempty"`

	ShipperContactName string `xml:"shipperContactName,omitempty" json:"shipperContactName,omitempty"`

	ShipperCountry string `xml:"shipperCountry,omitempty" json:"shipperCountry,omitempty"`

	ShipperCountryName string `xml:"shipperCountryName,omitempty" json:"shipperCountryName,omitempty"`

	ShipperEmail string `xml:"shipperEmail,omitempty" json:"shipperEmail,omitempty"`

	ShipperMobilePhone string `xml:"shipperMobilePhone,omitempty" json:"shipperMobilePhone,omitempty"`

	ShipperName string `xml:"shipperName,omitempty" json:"shipperName,omitempty"`

	ShipperName2 string `xml:"shipperName2,omitempty" json:"shipperName2,omitempty"`

	ShipperPhone string `xml:"shipperPhone,omitempty" json:"shipperPhone,omitempty"`

	ShipperPreAlert int32 `xml:"shipperPreAlert,omitempty" json:"shipperPreAlert,omitempty"`

	ShipperZipCode string `xml:"shipperZipCode,omitempty" json:"shipperZipCode,omitempty"`
}

type ResultFaisabiliteESD struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ return"`

	ErrorCode int32 `xml:"errorCode,omitempty" json:"errorCode,omitempty"`

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`
}

type EsdValue struct {
	ClosingDateTime soap.XSDDateTime `xml:"closingDateTime,omitempty" json:"closingDateTime,omitempty"`

	Height float32 `xml:"height,omitempty" json:"height,omitempty"`

	Length float32 `xml:"length,omitempty" json:"length,omitempty"`

	RetrievalDateTime soap.XSDDateTime `xml:"retrievalDateTime,omitempty" json:"retrievalDateTime,omitempty"`

	ShipperBuildingFloor string `xml:"shipperBuildingFloor,omitempty" json:"shipperBuildingFloor,omitempty"`

	ShipperCarriesCode string `xml:"shipperCarriesCode,omitempty" json:"shipperCarriesCode,omitempty"`

	ShipperServiceDirection string `xml:"shipperServiceDirection,omitempty" json:"shipperServiceDirection,omitempty"`

	SpecificInstructions string `xml:"specificInstructions,omitempty" json:"specificInstructions,omitempty"`

	Width float32 `xml:"width,omitempty" json:"width,omitempty"`
}

type HeaderValue struct {
	AccountNumber int32 `xml:"accountNumber,omitempty" json:"accountNumber,omitempty"`

	IdEmit string `xml:"idEmit,omitempty" json:"idEmit,omitempty"`

	IdentWebPro string `xml:"identWebPro,omitempty" json:"identWebPro,omitempty"`

	SubAccount int32 `xml:"subAccount,omitempty" json:"subAccount,omitempty"`
}

type CustomerValue struct {
	CustomerAdress1 string `xml:"customerAdress1,omitempty" json:"customerAdress1,omitempty"`

	CustomerAdress2 string `xml:"customerAdress2,omitempty" json:"customerAdress2,omitempty"`

	CustomerCity string `xml:"customerCity,omitempty" json:"customerCity,omitempty"`

	CustomerCivility string `xml:"customerCivility,omitempty" json:"customerCivility,omitempty"`

	CustomerContactName string `xml:"customerContactName,omitempty" json:"customerContactName,omitempty"`

	CustomerCountry string `xml:"customerCountry,omitempty" json:"customerCountry,omitempty"`

	CustomerCountryName string `xml:"customerCountryName,omitempty" json:"customerCountryName,omitempty"`

	CustomerEmail string `xml:"customerEmail,omitempty" json:"customerEmail,omitempty"`

	CustomerMobilePhone string `xml:"customerMobilePhone,omitempty" json:"customerMobilePhone,omitempty"`

	CustomerName string `xml:"customerName,omitempty" json:"customerName,omitempty"`

	CustomerName2 string `xml:"customerName2,omitempty" json:"customerName2,omitempty"`

	CustomerPhone string `xml:"customerPhone,omitempty" json:"customerPhone,omitempty"`

	CustomerPreAlert int32 `xml:"customerPreAlert,omitempty" json:"customerPreAlert,omitempty"`

	CustomerZipCode string `xml:"customerZipCode,omitempty" json:"customerZipCode,omitempty"`

	PrintAsSender string `xml:"printAsSender,omitempty" json:"printAsSender,omitempty"`
}

type RecipientValue struct {
	RecipientAdress1 string `xml:"recipientAdress1,omitempty" json:"recipientAdress1,omitempty"`

	RecipientAdress2 string `xml:"recipientAdress2,omitempty" json:"recipientAdress2,omitempty"`

	RecipientCity string `xml:"recipientCity,omitempty" json:"recipientCity,omitempty"`

	RecipientContactName string `xml:"recipientContactName,omitempty" json:"recipientContactName,omitempty"`

	RecipientCountry string `xml:"recipientCountry,omitempty" json:"recipientCountry,omitempty"`

	RecipientCountryName string `xml:"recipientCountryName,omitempty" json:"recipientCountryName,omitempty"`

	RecipientEmail string `xml:"recipientEmail,omitempty" json:"recipientEmail,omitempty"`

	RecipientMobilePhone string `xml:"recipientMobilePhone,omitempty" json:"recipientMobilePhone,omitempty"`

	RecipientName string `xml:"recipientName,omitempty" json:"recipientName,omitempty"`

	RecipientName2 string `xml:"recipientName2,omitempty" json:"recipientName2,omitempty"`

	RecipientPhone string `xml:"recipientPhone,omitempty" json:"recipientPhone,omitempty"`

	RecipientPreAlert int32 `xml:"recipientPreAlert,omitempty" json:"recipientPreAlert,omitempty"`

	RecipientZipCode string `xml:"recipientZipCode,omitempty" json:"recipientZipCode,omitempty"`
}

type RefValue struct {
	CustomerSkybillNumber string `xml:"customerSkybillNumber,omitempty" json:"customerSkybillNumber,omitempty"`

	PCardTransactionNumber string `xml:"PCardTransactionNumber,omitempty" json:"PCardTransactionNumber,omitempty"`

	RecipientRef string `xml:"recipientRef,omitempty" json:"recipientRef,omitempty"`

	ShipperRef string `xml:"shipperRef,omitempty" json:"shipperRef,omitempty"`
}

type SkybillValue struct {
	BulkNumber string `xml:"bulkNumber,omitempty" json:"bulkNumber,omitempty"`

	CodCurrency string `xml:"codCurrency,omitempty" json:"codCurrency,omitempty"`

	CodValue float32 `xml:"codValue,omitempty" json:"codValue,omitempty"`

	Content1 string `xml:"content1,omitempty" json:"content1,omitempty"`

	Content2 string `xml:"content2,omitempty" json:"content2,omitempty"`

	Content3 string `xml:"content3,omitempty" json:"content3,omitempty"`

	Content4 string `xml:"content4,omitempty" json:"content4,omitempty"`

	Content5 string `xml:"content5,omitempty" json:"content5,omitempty"`

	CustomsCurrency string `xml:"customsCurrency,omitempty" json:"customsCurrency,omitempty"`

	CustomsValue float32 `xml:"customsValue,omitempty" json:"customsValue,omitempty"`

	EvtCode string `xml:"evtCode,omitempty" json:"evtCode,omitempty"`

	InsuredCurrency string `xml:"insuredCurrency,omitempty" json:"insuredCurrency,omitempty"`

	InsuredValue float32 `xml:"insuredValue,omitempty" json:"insuredValue,omitempty"`

	Latitude string `xml:"latitude,omitempty" json:"latitude,omitempty"`

	Longitude string `xml:"longitude,omitempty" json:"longitude,omitempty"`

	MasterSkybillNumber string `xml:"masterSkybillNumber,omitempty" json:"masterSkybillNumber,omitempty"`

	ObjectType string `xml:"objectType,omitempty" json:"objectType,omitempty"`

	PortCurrency string `xml:"portCurrency,omitempty" json:"portCurrency,omitempty"`

	PortValue float32 `xml:"portValue,omitempty" json:"portValue,omitempty"`

	ProductCode string `xml:"productCode,omitempty" json:"productCode,omitempty"`

	Qualite string `xml:"qualite,omitempty" json:"qualite,omitempty"`

	Service string `xml:"service,omitempty" json:"service,omitempty"`

	ShipDate soap.XSDDateTime `xml:"shipDate,omitempty" json:"shipDate,omitempty"`

	ShipHour int32 `xml:"shipHour,omitempty" json:"shipHour,omitempty"`

	SkybillRank string `xml:"skybillRank,omitempty" json:"skybillRank,omitempty"`

	Source string `xml:"source,omitempty" json:"source,omitempty"`

	Weight float32 `xml:"weight,omitempty" json:"weight,omitempty"`

	WeightUnit string `xml:"weightUnit,omitempty" json:"weightUnit,omitempty"`
}

type SkybillParamsValue struct {
	Duplicata string `xml:"duplicata,omitempty" json:"duplicata,omitempty"`

	Mode string `xml:"mode,omitempty" json:"mode,omitempty"`
}

type ResultExpeditionValue struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ return"`

	ESDFullNumber string `xml:"ESDFullNumber,omitempty" json:"ESDFullNumber,omitempty"`

	ESDNumber string `xml:"ESDNumber,omitempty" json:"ESDNumber,omitempty"`

	ErrorCode int32 `xml:"errorCode,omitempty" json:"errorCode,omitempty"`

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`

	PickupDate soap.XSDDateTime `xml:"pickupDate,omitempty" json:"pickupDate,omitempty"`

	Skybill []byte `xml:"skybill,omitempty" json:"skybill,omitempty"`

	SkybillNumber string `xml:"skybillNumber,omitempty" json:"skybillNumber,omitempty"`
}

type ResultGetReservedSkybillWithTypeValue struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ return"`

	ErrorCode int32 `xml:"errorCode,omitempty" json:"errorCode,omitempty"`

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`

	Skybill string `xml:"skybill,omitempty" json:"skybill,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type DonneurDOrdre struct {
	AutreTelephone string `xml:"autreTelephone,omitempty" json:"autreTelephone,omitempty"`

	Batiment string `xml:"batiment,omitempty" json:"batiment,omitempty"`

	CodeCivilite string `xml:"codeCivilite,omitempty" json:"codeCivilite,omitempty"`

	CodeNaf string `xml:"codeNaf,omitempty" json:"codeNaf,omitempty"`

	CodePays string `xml:"codePays,omitempty" json:"codePays,omitempty"`

	CodePostal string `xml:"codePostal,omitempty" json:"codePostal,omitempty"`

	EMail string `xml:"EMail,omitempty" json:"EMail,omitempty"`

	Fax string `xml:"fax,omitempty" json:"fax,omitempty"`

	LieuDit string `xml:"lieuDit,omitempty" json:"lieuDit,omitempty"`

	Nom string `xml:"nom,omitempty" json:"nom,omitempty"`

	Prenom string `xml:"prenom,omitempty" json:"prenom,omitempty"`

	RaisonSociale string `xml:"raisonSociale,omitempty" json:"raisonSociale,omitempty"`

	Service string `xml:"service,omitempty" json:"service,omitempty"`

	Telephone string `xml:"telephone,omitempty" json:"telephone,omitempty"`

	Ville string `xml:"ville,omitempty" json:"ville,omitempty"`

	Voie string `xml:"voie,omitempty" json:"voie,omitempty"`
}

type AdresseEnlevement struct {
	CodeCivilite string `xml:"codeCivilite,omitempty" json:"codeCivilite,omitempty"`

	CodePays string `xml:"codePays,omitempty" json:"codePays,omitempty"`

	CodePorte string `xml:"codePorte,omitempty" json:"codePorte,omitempty"`

	CodePostal string `xml:"codePostal,omitempty" json:"codePostal,omitempty"`

	LieuDit string `xml:"lieuDit,omitempty" json:"lieuDit,omitempty"`

	Nom string `xml:"nom,omitempty" json:"nom,omitempty"`

	NomPersonneARencontrer string `xml:"nomPersonneARencontrer,omitempty" json:"nomPersonneARencontrer,omitempty"`

	NumeroVoie string `xml:"numeroVoie,omitempty" json:"numeroVoie,omitempty"`

	PorteAPorte bool `xml:"porteAPorte,omitempty" json:"porteAPorte,omitempty"`

	Prenom string `xml:"prenom,omitempty" json:"prenom,omitempty"`

	RaisonSociale string `xml:"raisonSociale,omitempty" json:"raisonSociale,omitempty"`

	ResidenceBatimentEtage string `xml:"residenceBatimentEtage,omitempty" json:"residenceBatimentEtage,omitempty"`

	ServiceDirection string `xml:"serviceDirection,omitempty" json:"serviceDirection,omitempty"`

	Telephone string `xml:"telephone,omitempty" json:"telephone,omitempty"`

	Ville string `xml:"ville,omitempty" json:"ville,omitempty"`
}

type AdresseEnlevementV2 struct {
	*AdresseEnlevement

	Email string `xml:"email,omitempty" json:"email,omitempty"`
}

type AdresseEnlevementV3 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ adresseEnlevement"`

	*AdresseEnlevementV2

	RefExpediteur string `xml:"refExpediteur,omitempty" json:"refExpediteur,omitempty"`
}

type ParticularitesEsd struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ particulartiesEsd"`

	EtudeDeFaisabilite bool `xml:"etudeDeFaisabilite,omitempty" json:"etudeDeFaisabilite,omitempty"`

	GrosVolume bool `xml:"grosVolume,omitempty" json:"grosVolume,omitempty"`

	Hauteur int32 `xml:"hauteur,omitempty" json:"hauteur,omitempty"`

	InstructionsParticulieres string `xml:"instructionsParticulieres,omitempty" json:"instructionsParticulieres,omitempty"`

	Largeur int32 `xml:"largeur,omitempty" json:"largeur,omitempty"`

	ListeColisAnnonces string `xml:"listeColisAnnonces,omitempty" json:"listeColisAnnonces,omitempty"`

	Longueur int32 `xml:"longueur,omitempty" json:"longueur,omitempty"`

	NombreEnvois int32 `xml:"nombreEnvois,omitempty" json:"nombreEnvois,omitempty"`

	Poids float32 `xml:"poids,omitempty" json:"poids,omitempty"`

	Volume string `xml:"volume,omitempty" json:"volume,omitempty"`
}

type Options struct {
	AviserSurRealisation bool `xml:"aviserSurRealisation,omitempty" json:"aviserSurRealisation,omitempty"`

	ChezUnTiers bool `xml:"chezUnTiers,omitempty" json:"chezUnTiers,omitempty"`

	EnvoyerLtParMail bool `xml:"envoyerLtParMail,omitempty" json:"envoyerLtParMail,omitempty"`

	LTaImprimerParChronopost bool `xml:"LTaImprimerParChronopost,omitempty" json:"LTaImprimerParChronopost,omitempty"`
}

type ResultEnlevementNational struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ return"`

	CodeErreur int32 `xml:"codeErreur,omitempty" json:"codeErreur,omitempty"`

	InfoEnlevement *InfoEnlevement `xml:"infoEnlevement,omitempty" json:"infoEnlevement,omitempty"`

	LibelleErreur string `xml:"libelleErreur,omitempty" json:"libelleErreur,omitempty"`
}

type InfoEnlevement struct {
	AncienNumeroESD string `xml:"ancienNumeroESD,omitempty" json:"ancienNumeroESD,omitempty"`

	CodeBu string `xml:"codeBu,omitempty" json:"codeBu,omitempty"`

	CodeDepot string `xml:"codeDepot,omitempty" json:"codeDepot,omitempty"`

	CodePostal string `xml:"codePostal,omitempty" json:"codePostal,omitempty"`

	DateCreation soap.XSDDateTime `xml:"dateCreation,omitempty" json:"dateCreation,omitempty"`

	DatePassage soap.XSDDateTime `xml:"datePassage,omitempty" json:"datePassage,omitempty"`

	IdEnlevement int32 `xml:"idEnlevement,omitempty" json:"idEnlevement,omitempty"`

	NumeroUniqueESD string `xml:"numeroUniqueESD,omitempty" json:"numeroUniqueESD,omitempty"`

	RefDestinataire string `xml:"refDestinataire,omitempty" json:"refDestinataire,omitempty"`

	RefEsdClient string `xml:"refEsdClient,omitempty" json:"refEsdClient,omitempty"`

	Ville string `xml:"ville,omitempty" json:"ville,omitempty"`
}

type ScheduledValue struct {
	AppointmentValue *AppointmentValue `xml:"appointmentValue,omitempty" json:"appointmentValue,omitempty"`

	ExpirationDate soap.XSDDateTime `xml:"expirationDate,omitempty" json:"expirationDate,omitempty"`

	SellByDate soap.XSDDateTime `xml:"sellByDate,omitempty" json:"sellByDate,omitempty"`
}

type AppointmentValue struct {
	TimeSlotEndDate soap.XSDDateTime `xml:"timeSlotEndDate,omitempty" json:"timeSlotEndDate,omitempty"`

	TimeSlotStartDate soap.XSDDateTime `xml:"timeSlotStartDate,omitempty" json:"timeSlotStartDate,omitempty"`

	TimeSlotTariffLevel string `xml:"timeSlotTariffLevel,omitempty" json:"timeSlotTariffLevel,omitempty"`
}

type EsdWithRefClientValue struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ esdValue"`

	*EsdValue

	LtAImprimerParChronopost bool `xml:"ltAImprimerParChronopost,omitempty" json:"ltAImprimerParChronopost,omitempty"`

	NombreDePassageMaximum int32 `xml:"nombreDePassageMaximum,omitempty" json:"nombreDePassageMaximum,omitempty"`

	RefEsdClient string `xml:"refEsdClient,omitempty" json:"refEsdClient,omitempty"`
}

type EsdWithRefClientValueV2 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ esdValue"`

	*EsdWithRefClientValue

	NumberOfParcel int32 `xml:"numberOfParcel,omitempty" json:"numberOfParcel,omitempty"`

	ParcelsNumber []*string `xml:"parcelsNumber,omitempty" json:"parcelsNumber,omitempty"`
}

type ResultReservationExpeditionValue struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ return"`

	CodeDepot string `xml:"codeDepot,omitempty" json:"codeDepot,omitempty"`

	CodeService string `xml:"codeService,omitempty" json:"codeService,omitempty"`

	DSort string `xml:"DSort,omitempty" json:"DSort,omitempty"`

	DestinationDepot string `xml:"destinationDepot,omitempty" json:"destinationDepot,omitempty"`

	ESDFullNumber string `xml:"ESDFullNumber,omitempty" json:"ESDFullNumber,omitempty"`

	ESDNumber string `xml:"ESDNumber,omitempty" json:"ESDNumber,omitempty"`

	ErrorCode int32 `xml:"errorCode,omitempty" json:"errorCode,omitempty"`

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`

	GeoPostCodeBarre string `xml:"geoPostCodeBarre,omitempty" json:"geoPostCodeBarre,omitempty"`

	GeoPostNumeroColis string `xml:"geoPostNumeroColis,omitempty" json:"geoPostNumeroColis,omitempty"`

	GroupingPriorityLabel string `xml:"groupingPriorityLabel,omitempty" json:"groupingPriorityLabel,omitempty"`

	OSort string `xml:"OSort,omitempty" json:"OSort,omitempty"`

	PickupDate soap.XSDDateTime `xml:"pickupDate,omitempty" json:"pickupDate,omitempty"`

	ReservationNumber string `xml:"reservationNumber,omitempty" json:"reservationNumber,omitempty"`

	ServiceMark string `xml:"serviceMark,omitempty" json:"serviceMark,omitempty"`

	ServiceName string `xml:"serviceName,omitempty" json:"serviceName,omitempty"`

	SignaletiqueProduit string `xml:"signaletiqueProduit,omitempty" json:"signaletiqueProduit,omitempty"`

	SkybillNumber string `xml:"skybillNumber,omitempty" json:"skybillNumber,omitempty"`
}

type EsdValue3 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ esdValue"`

	*EsdWithRefClientValue

	CodeDepotColReq string `xml:"codeDepotColReq,omitempty" json:"codeDepotColReq,omitempty"`

	NumColReq string `xml:"numColReq,omitempty" json:"numColReq,omitempty"`
}

type SkybillWithDimensionsValue struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ skybillValue"`

	*SkybillValue

	Height float32 `xml:"height,omitempty" json:"height,omitempty"`

	Length float32 `xml:"length,omitempty" json:"length,omitempty"`

	Width float32 `xml:"width,omitempty" json:"width,omitempty"`
}

type SkybillWithDimensionsValueV2 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ skybillValue"`

	*SkybillWithDimensionsValue

	As string `xml:"as,omitempty" json:"as,omitempty"`
}

type SkybillWithDimensionsValueV3 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ skybillValue"`

	*SkybillWithDimensionsValueV2

	SubAccount string `xml:"subAccount,omitempty" json:"subAccount,omitempty"`

	ToTheOrderOf string `xml:"toTheOrderOf,omitempty" json:"toTheOrderOf,omitempty"`
}

type SkybillParamsValueV2 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ skybillParamsValue"`

	*SkybillParamsValue

	WithReservation int32 `xml:"withReservation,omitempty" json:"withReservation,omitempty"`
}

type ResultShippingValue struct {
	ErrorCode int32 `xml:"errorCode,omitempty" json:"errorCode,omitempty"`

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`
}

type ResultMultiParcelExpeditionValue struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ return"`

	*ResultShippingValue

	ESDFullNumber string `xml:"ESDFullNumber,omitempty" json:"ESDFullNumber,omitempty"`

	ESDNumber string `xml:"ESDNumber,omitempty" json:"ESDNumber,omitempty"`

	PickupDate soap.XSDDateTime `xml:"pickupDate,omitempty" json:"pickupDate,omitempty"`

	ReservationNumber string `xml:"reservationNumber,omitempty" json:"reservationNumber,omitempty"`

	ResultMultiParcelValue []*ResultMultiParcelValue `xml:"resultMultiParcelValue,omitempty" json:"resultMultiParcelValue,omitempty"`
}

type ResultMultiParcelValue struct {
	AsCode string `xml:"asCode,omitempty" json:"asCode,omitempty"`

	CodeDepot string `xml:"codeDepot,omitempty" json:"codeDepot,omitempty"`

	CodeService string `xml:"codeService,omitempty" json:"codeService,omitempty"`

	DestinationDepot string `xml:"destinationDepot,omitempty" json:"destinationDepot,omitempty"`

	GeoPostCodeBarre string `xml:"geoPostCodeBarre,omitempty" json:"geoPostCodeBarre,omitempty"`

	GeoPostNumeroColis string `xml:"geoPostNumeroColis,omitempty" json:"geoPostNumeroColis,omitempty"`

	GroupingPriorityLabel string `xml:"groupingPriorityLabel,omitempty" json:"groupingPriorityLabel,omitempty"`

	PdfEtiquette []byte `xml:"pdfEtiquette,omitempty" json:"pdfEtiquette,omitempty"`

	ServiceMark string `xml:"serviceMark,omitempty" json:"serviceMark,omitempty"`

	ServiceName string `xml:"serviceName,omitempty" json:"serviceName,omitempty"`

	SignaletiqueProduit string `xml:"signaletiqueProduit,omitempty" json:"signaletiqueProduit,omitempty"`

	SkybillNumber string `xml:"skybillNumber,omitempty" json:"skybillNumber,omitempty"`

	DSort string `xml:"dSort,omitempty" json:"dSort,omitempty"`

	OSort string `xml:"oSort,omitempty" json:"oSort,omitempty"`
}

type SkybillValueV2 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ skybillValue"`

	*SkybillValue

	As string `xml:"as,omitempty" json:"as,omitempty"`
}

type ResultReservationExpeditionValueV2 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ return"`

	*ResultReservationExpeditionValue

	AsCode string `xml:"asCode,omitempty" json:"asCode,omitempty"`
}

type ResultGetReservedSkybillValue struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ return"`

	ErrorCode int32 `xml:"errorCode,omitempty" json:"errorCode,omitempty"`

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`

	Skybill string `xml:"skybill,omitempty" json:"skybill,omitempty"`
}

type ResultReservationMultiParcelExpeditionValue struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ return"`

	ESDFullNumber string `xml:"ESDFullNumber,omitempty" json:"ESDFullNumber,omitempty"`

	ESDNumber string `xml:"ESDNumber,omitempty" json:"ESDNumber,omitempty"`

	ErrorCode int32 `xml:"errorCode,omitempty" json:"errorCode,omitempty"`

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`

	PickupDate soap.XSDDateTime `xml:"pickupDate,omitempty" json:"pickupDate,omitempty"`

	ReservationNumber string `xml:"reservationNumber,omitempty" json:"reservationNumber,omitempty"`

	ResultParcelValue []*ResultParcelValue `xml:"resultParcelValue,omitempty" json:"resultParcelValue,omitempty"`
}

type ResultParcelValue struct {
	CodeDepot string `xml:"codeDepot,omitempty" json:"codeDepot,omitempty"`

	CodeService string `xml:"codeService,omitempty" json:"codeService,omitempty"`

	DSort string `xml:"DSort,omitempty" json:"DSort,omitempty"`

	DestinationDepot string `xml:"destinationDepot,omitempty" json:"destinationDepot,omitempty"`

	GeoPostCodeBarre string `xml:"geoPostCodeBarre,omitempty" json:"geoPostCodeBarre,omitempty"`

	GeoPostNumeroColis string `xml:"geoPostNumeroColis,omitempty" json:"geoPostNumeroColis,omitempty"`

	GroupingPriorityLabel string `xml:"groupingPriorityLabel,omitempty" json:"groupingPriorityLabel,omitempty"`

	OSort string `xml:"OSort,omitempty" json:"OSort,omitempty"`

	ReservationNumber string `xml:"reservationNumber,omitempty" json:"reservationNumber,omitempty"`

	ServiceMark string `xml:"serviceMark,omitempty" json:"serviceMark,omitempty"`

	ServiceName string `xml:"serviceName,omitempty" json:"serviceName,omitempty"`

	SignaletiqueProduit string `xml:"signaletiqueProduit,omitempty" json:"signaletiqueProduit,omitempty"`

	SkybillNumber string `xml:"skybillNumber,omitempty" json:"skybillNumber,omitempty"`
}

type ShipperValueV2 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ shipperValue"`

	*ShipperValue

	ShipperType string `xml:"shipperType,omitempty" json:"shipperType,omitempty"`
}

type RecipientValueV2 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ recipientValue"`

	*RecipientValue

	RecipientType string `xml:"recipientType,omitempty" json:"recipientType,omitempty"`
}

type RefValueV2 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ refValue"`

	*RefValue

	IdRelais string `xml:"idRelais,omitempty" json:"idRelais,omitempty"`
}

type SkybillWithDimensionsValueV4 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ skybillValue"`

	*SkybillWithDimensionsValueV3

	SkybillNumber string `xml:"skybillNumber,omitempty" json:"skybillNumber,omitempty"`
}

type SkybillWithDimensionsValueV5 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ skybillValue"`

	*SkybillWithDimensionsValueV4

	Carrier string `xml:"carrier,omitempty" json:"carrier,omitempty"`

	SkybillBackNumber string `xml:"skybillBackNumber,omitempty" json:"skybillBackNumber,omitempty"`
}

type SkybillWithDimensionsValueV6 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ skybillValue"`

	*SkybillWithDimensionsValueV5

	AlternateProductCode string `xml:"alternateProductCode,omitempty" json:"alternateProductCode,omitempty"`

	LabelNumber string `xml:"labelNumber,omitempty" json:"labelNumber,omitempty"`
}

type RecipientLocalValue struct {
	*RecipientValue

	IdentityCardNumber string `xml:"identityCardNumber,omitempty" json:"identityCardNumber,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`

	Province string `xml:"province,omitempty" json:"province,omitempty"`
}

type RecipientLocalValueV2 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ recipientLocalValue"`

	*RecipientLocalValue

	RecipientType string `xml:"recipientType,omitempty" json:"recipientType,omitempty"`

	ThirdParty string `xml:"thirdParty,omitempty" json:"thirdParty,omitempty"`
}

type CustomsValue struct {
	ArticlesValue []*ArticleValue `xml:"articlesValue,omitempty" json:"articlesValue,omitempty"`

	BagNumber string `xml:"bagNumber,omitempty" json:"bagNumber,omitempty"`

	ClearanceCleared string `xml:"clearanceCleared,omitempty" json:"clearanceCleared,omitempty"`

	Currency string `xml:"currency,omitempty" json:"currency,omitempty"`

	Description string `xml:"description,omitempty" json:"description,omitempty"`

	DescriptionInLanguage string `xml:"descriptionInLanguage,omitempty" json:"descriptionInLanguage,omitempty"`

	Eori string `xml:"eori,omitempty" json:"eori,omitempty"`

	Incoterm string `xml:"incoterm,omitempty" json:"incoterm,omitempty"`

	Language string `xml:"language,omitempty" json:"language,omitempty"`

	NumberOfItems int32 `xml:"numberOfItems,omitempty" json:"numberOfItems,omitempty"`

	Value float32 `xml:"value,omitempty" json:"value,omitempty"`

	VatNumber string `xml:"vatNumber,omitempty" json:"vatNumber,omitempty"`
}

type ArticleValue struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ articlesValue"`

	Content string `xml:"content,omitempty" json:"content,omitempty"`

	ContentInLanguage string `xml:"contentInLanguage,omitempty" json:"contentInLanguage,omitempty"`

	GrossWeight float32 `xml:"grossWeight,omitempty" json:"grossWeight,omitempty"`

	Hscode string `xml:"hscode,omitempty" json:"hscode,omitempty"`

	NetWeight float32 `xml:"netWeight,omitempty" json:"netWeight,omitempty"`

	Origin string `xml:"origin,omitempty" json:"origin,omitempty"`

	Position int32 `xml:"position,omitempty" json:"position,omitempty"`

	Quantity int32 `xml:"quantity,omitempty" json:"quantity,omitempty"`

	Regime string `xml:"regime,omitempty" json:"regime,omitempty"`

	Value float32 `xml:"value,omitempty" json:"value,omitempty"`
}

type HeaderValueV2 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ headerValue"`

	*HeaderValue

	Iv4OrderId string `xml:"iv4OrderId,omitempty" json:"iv4OrderId,omitempty"`
}

type ResultReservationMultiParcelExpeditionValueV2 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ return"`

	*ResultReservationMultiParcelExpeditionValue

	AsCode string `xml:"asCode,omitempty" json:"asCode,omitempty"`
}

type ResultExpeditionValueV3 struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ return"`

	*ResultExpeditionValue

	CodeDepot string `xml:"codeDepot,omitempty" json:"codeDepot,omitempty"`

	CodeService string `xml:"codeService,omitempty" json:"codeService,omitempty"`

	DestinationDepot string `xml:"destinationDepot,omitempty" json:"destinationDepot,omitempty"`

	GeoPostCodeBarre string `xml:"geoPostCodeBarre,omitempty" json:"geoPostCodeBarre,omitempty"`

	GeoPostNumeroColis string `xml:"geoPostNumeroColis,omitempty" json:"geoPostNumeroColis,omitempty"`

	GroupingPriorityLabel string `xml:"groupingPriorityLabel,omitempty" json:"groupingPriorityLabel,omitempty"`

	ServiceMark string `xml:"serviceMark,omitempty" json:"serviceMark,omitempty"`

	ServiceName string `xml:"serviceName,omitempty" json:"serviceName,omitempty"`

	SignaletiqueProduit string `xml:"signaletiqueProduit,omitempty" json:"signaletiqueProduit,omitempty"`

	DSort string `xml:"dSort,omitempty" json:"dSort,omitempty"`

	OSort string `xml:"oSort,omitempty" json:"oSort,omitempty"`
}

type ResultMonoParcelExpeditionValue struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ return"`

	*ResultExpeditionValueV3

	PdfEtiquette []byte `xml:"pdfEtiquette,omitempty" json:"pdfEtiquette,omitempty"`
}

type EsdResultContraintesAgenceValue struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ return"`

	CodeErreur int32 `xml:"codeErreur,omitempty" json:"codeErreur,omitempty"`

	EsdContraintesAgence []*EsdContraintesAgence `xml:"esdContraintesAgence,omitempty" json:"esdContraintesAgence,omitempty"`

	LibelleErreur string `xml:"libelleErreur,omitempty" json:"libelleErreur,omitempty"`
}

type EsdContraintesAgence struct {
	Battement int32 `xml:"battement,omitempty" json:"battement,omitempty"`

	BattementEnHeure string `xml:"battementEnHeure,omitempty" json:"battementEnHeure,omitempty"`

	CodeAgence string `xml:"codeAgence,omitempty" json:"codeAgence,omitempty"`

	CodePays string `xml:"codePays,omitempty" json:"codePays,omitempty"`

	CodePostal string `xml:"codePostal,omitempty" json:"codePostal,omitempty"`

	Hla string `xml:"hla,omitempty" json:"hla,omitempty"`

	Hlp string `xml:"hlp,omitempty" json:"hlp,omitempty"`

	Hppt string `xml:"hppt,omitempty" json:"hppt,omitempty"`

	NomAgence string `xml:"nomAgence,omitempty" json:"nomAgence,omitempty"`

	RaisonNonActivite string `xml:"raisonNonActivite,omitempty" json:"raisonNonActivite,omitempty"`

	Ville string `xml:"ville,omitempty" json:"ville,omitempty"`

	ZoneA bool `xml:"zoneA,omitempty" json:"zoneA,omitempty"`
}

type ResultAnnulerEnlevement struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ return"`

	CodeErreur int32 `xml:"codeErreur,omitempty" json:"codeErreur,omitempty"`

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`

	Statut struct {
		Entry []struct {
			Key AnyType `xml:"key,omitempty" json:"key,omitempty"`

			Value AnyType `xml:"value,omitempty" json:"value,omitempty"`
		} `xml:"entry,omitempty" json:"entry,omitempty"`
	} `xml:"statut,omitempty" json:"statut,omitempty"`
}

type DestinatairesDpd struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ destinatairesEsd"`

	DestinataireDpd []*DestinataireDpd `xml:"destinataireDpd,omitempty" json:"destinataireDpd,omitempty"`
}

type DestinataireDpd struct {
	AdresseDestinataire *AdresseDestinataire `xml:"adresseDestinataire,omitempty" json:"adresseDestinataire,omitempty"`

	InfoClient *InfoClient `xml:"infoClient,omitempty" json:"infoClient,omitempty"`

	Particularites *Particularites `xml:"particularites,omitempty" json:"particularites,omitempty"`

	ParticularitesColisDpd *ParticularitesColisDpd `xml:"particularitesColisDpd,omitempty" json:"particularitesColisDpd,omitempty"`
}

type AdresseDestinataire struct {
	Adresse string `xml:"adresse,omitempty" json:"adresse,omitempty"`

	AdresseSuite string `xml:"adresseSuite,omitempty" json:"adresseSuite,omitempty"`

	CodePays string `xml:"codePays,omitempty" json:"codePays,omitempty"`

	CodePostal string `xml:"codePostal,omitempty" json:"codePostal,omitempty"`

	Digicode string `xml:"digicode,omitempty" json:"digicode,omitempty"`

	Etage string `xml:"etage,omitempty" json:"etage,omitempty"`

	Mail string `xml:"mail,omitempty" json:"mail,omitempty"`

	Nom string `xml:"nom,omitempty" json:"nom,omitempty"`

	Poids float32 `xml:"poids,omitempty" json:"poids,omitempty"`

	Prenom string `xml:"prenom,omitempty" json:"prenom,omitempty"`

	RaisonSociale string `xml:"raisonSociale,omitempty" json:"raisonSociale,omitempty"`

	ReferenceDestinataire string `xml:"referenceDestinataire,omitempty" json:"referenceDestinataire,omitempty"`

	Telephone string `xml:"telephone,omitempty" json:"telephone,omitempty"`

	Ville string `xml:"ville,omitempty" json:"ville,omitempty"`
}

type InfoClient struct {
	Contenu string `xml:"contenu,omitempty" json:"contenu,omitempty"`

	Devise string `xml:"devise,omitempty" json:"devise,omitempty"`

	Montant float64 `xml:"montant,omitempty" json:"montant,omitempty"`

	RefEsdClient string `xml:"refEsdClient,omitempty" json:"refEsdClient,omitempty"`

	Service string `xml:"service,omitempty" json:"service,omitempty"`
}

type Particularites struct {
	Hauteur float32 `xml:"hauteur,omitempty" json:"hauteur,omitempty"`

	InstructionsParticulieres string `xml:"instructionsParticulieres,omitempty" json:"instructionsParticulieres,omitempty"`

	Largeur float32 `xml:"largeur,omitempty" json:"largeur,omitempty"`

	Longueur float32 `xml:"longueur,omitempty" json:"longueur,omitempty"`

	NombreEnvois int32 `xml:"nombreEnvois,omitempty" json:"nombreEnvois,omitempty"`

	Poids float32 `xml:"poids,omitempty" json:"poids,omitempty"`
}

type ParticularitesColisDpd struct {
	InfoDouanieres *InfoDouanieres `xml:"infoDouanieres,omitempty" json:"infoDouanieres,omitempty"`

	ValeurAssuree float32 `xml:"valeurAssuree,omitempty" json:"valeurAssuree,omitempty"`
}

type InfoDouanieres struct {
	Devise string `xml:"devise,omitempty" json:"devise,omitempty"`

	Montant float32 `xml:"montant,omitempty" json:"montant,omitempty"`

	Type_ string `xml:"type,omitempty" json:"type,omitempty"`
}

type ResultPickupOrCollectionRequest struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ return"`

	CodeErreur int32 `xml:"codeErreur,omitempty" json:"codeErreur,omitempty"`

	CollectionRequest bool `xml:"collectionRequest,omitempty" json:"collectionRequest,omitempty"`

	InfoEnlevements []*InfoEnlevement `xml:"infoEnlevements,omitempty" json:"infoEnlevements,omitempty"`

	LibelleErreur string `xml:"libelleErreur,omitempty" json:"libelleErreur,omitempty"`
}

type SkybillValueBase struct {
	As string `xml:"as,omitempty" json:"as,omitempty"`

	ObjectType string `xml:"objectType,omitempty" json:"objectType,omitempty"`

	ProductCode string `xml:"productCode,omitempty" json:"productCode,omitempty"`

	Service string `xml:"service,omitempty" json:"service,omitempty"`

	ShipDate soap.XSDDateTime `xml:"shipDate,omitempty" json:"shipDate,omitempty"`

	Weight float32 `xml:"weight,omitempty" json:"weight,omitempty"`
}

type ResultShippingInfo struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ return"`

	Error *Error `xml:"error,omitempty" json:"error,omitempty"`

	ShippingInfo *ShippingInfo `xml:"shippingInfo,omitempty" json:"shippingInfo,omitempty"`
}

type Error struct {
	Detail *Detail `xml:"detail,omitempty" json:"detail,omitempty"`

	ErrorCode int32 `xml:"errorCode,omitempty" json:"errorCode,omitempty"`

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`
}

type Detail struct {
	ErrorCode int32 `xml:"errorCode,omitempty" json:"errorCode,omitempty"`

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`

	Mode string `xml:"mode,omitempty" json:"mode,omitempty"`
}

type ShippingInfo struct {
	AsCode string `xml:"asCode,omitempty" json:"asCode,omitempty"`

	CodeService string `xml:"codeService,omitempty" json:"codeService,omitempty"`

	DestinationDepot string `xml:"destinationDepot,omitempty" json:"destinationDepot,omitempty"`

	GroupingPriorityLabel string `xml:"groupingPriorityLabel,omitempty" json:"groupingPriorityLabel,omitempty"`

	ServiceMark string `xml:"serviceMark,omitempty" json:"serviceMark,omitempty"`

	ServiceName string `xml:"serviceName,omitempty" json:"serviceName,omitempty"`

	SignaletiqueProduit string `xml:"signaletiqueProduit,omitempty" json:"signaletiqueProduit,omitempty"`

	DSort string `xml:"dSort,omitempty" json:"dSort,omitempty"`

	OSort string `xml:"oSort,omitempty" json:"oSort,omitempty"`
}

type ResultGetRouting struct {
	XMLName xml.Name `xml:"http://cxf.shipping.soap.chronopost.fr/ return"`

	ErrorCode int32 `xml:"errorCode,omitempty" json:"errorCode,omitempty"`

	ErrorMessage string `xml:"errorMessage,omitempty" json:"errorMessage,omitempty"`

	GeopostResult *GeopostResult `xml:"geopostResult,omitempty" json:"geopostResult,omitempty"`

	PosteComptable string `xml:"posteComptable,omitempty" json:"posteComptable,omitempty"`
}

type GeopostResult struct {
	BarcodeId string `xml:"barcodeId,omitempty" json:"barcodeId,omitempty"`

	BarcodePostcode string `xml:"barcodePostcode,omitempty" json:"barcodePostcode,omitempty"`

	BuAlphaString string `xml:"buAlphaString,omitempty" json:"buAlphaString,omitempty"`

	BuCode string `xml:"buCode,omitempty" json:"buCode,omitempty"`

	CSort string `xml:"CSort,omitempty" json:"CSort,omitempty"`

	DCountry string `xml:"DCountry,omitempty" json:"DCountry,omitempty"`

	DDepot string `xml:"DDepot,omitempty" json:"DDepot,omitempty"`

	DDepotCountry string `xml:"DDepotCountry,omitempty" json:"DDepotCountry,omitempty"`

	DDepotStr string `xml:"DDepotStr,omitempty" json:"DDepotStr,omitempty"`

	DSort string `xml:"DSort,omitempty" json:"DSort,omitempty"`

	GroupingPriority string `xml:"groupingPriority,omitempty" json:"groupingPriority,omitempty"`

	NetworkCode string `xml:"networkCode,omitempty" json:"networkCode,omitempty"`

	OSort string `xml:"OSort,omitempty" json:"OSort,omitempty"`

	PartnerCode string `xml:"partnerCode,omitempty" json:"partnerCode,omitempty"`

	SSort string `xml:"SSort,omitempty" json:"SSort,omitempty"`

	ServiceMark string `xml:"serviceMark,omitempty" json:"serviceMark,omitempty"`

	ServiceText string `xml:"serviceText,omitempty" json:"serviceText,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`
}

type FaisabiliteESD struct {
	ShipperValue *ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	RetrievalDateTime soap.XSDDateTime `xml:"retrievalDateTime,omitempty" json:"retrievalDateTime,omitempty"`

	ClosingDateTime soap.XSDDateTime `xml:"closingDateTime,omitempty" json:"closingDateTime,omitempty"`
}

type FaisabiliteESDResponse struct {
	Return_ *ResultFaisabiliteESD `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingV2 struct {
	EsdValue *EsdValue `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue *ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue *RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue *RefValue `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue *SkybillValue `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValue `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`
}

type ShippingV2Response struct {
	Return_ *ResultExpeditionValue `xml:"return,omitempty" json:"return,omitempty"`
}

type GetReservedSkybillWithTypeAndModeAuth struct {
	NumberSearch string `xml:"numberSearch,omitempty" json:"numberSearch,omitempty"`

	Mode string `xml:"mode,omitempty" json:"mode,omitempty"`

	AccountNumber int32 `xml:"accountNumber,omitempty" json:"accountNumber,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`
}

type GetReservedSkybillWithTypeAndModeAuthResponse struct {
	Return_ *ResultGetReservedSkybillWithTypeValue `xml:"return,omitempty" json:"return,omitempty"`
}

type GetReservedSkybillWithType struct {
	ReservationNumber string `xml:"reservationNumber,omitempty" json:"reservationNumber,omitempty"`
}

type GetReservedSkybillWithTypeResponse struct {
	Return_ *ResultGetReservedSkybillWithTypeValue `xml:"return,omitempty" json:"return,omitempty"`
}

type CreerEnlevementNational struct {
	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	DatePassage soap.XSDDateTime `xml:"datePassage,omitempty" json:"datePassage,omitempty"`

	DatePassageFermeture soap.XSDDateTime `xml:"datePassageFermeture,omitempty" json:"datePassageFermeture,omitempty"`

	DonneurDOrdre *DonneurDOrdre `xml:"donneurDOrdre,omitempty" json:"donneurDOrdre,omitempty"`

	AdresseEnlevement *AdresseEnlevementV3 `xml:"adresseEnlevement,omitempty" json:"adresseEnlevement,omitempty"`

	ParticulartiesEsd *ParticularitesEsd `xml:"particulartiesEsd,omitempty" json:"particulartiesEsd,omitempty"`

	ReferenceEsdClient string `xml:"referenceEsdClient,omitempty" json:"referenceEsdClient,omitempty"`

	Contenu string `xml:"contenu,omitempty" json:"contenu,omitempty"`

	Options *Options `xml:"options,omitempty" json:"options,omitempty"`

	Locale string `xml:"locale,omitempty" json:"locale,omitempty"`
}

type CreerEnlevementNationalResponse struct {
	Return_ *ResultEnlevementNational `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingV3 struct {
	EsdValue *EsdValue `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue *ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue *RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue *RefValue `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue *SkybillValue `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValue `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`

	ScheduledValue *ScheduledValue `xml:"scheduledValue,omitempty" json:"scheduledValue,omitempty"`
}

type ShippingV3Response struct {
	Return_ *ResultExpeditionValue `xml:"return,omitempty" json:"return,omitempty"`
}

type GetReservedSkybillWithTypeAndModeByReservation struct {
	ReservationNumber string `xml:"reservationNumber,omitempty" json:"reservationNumber,omitempty"`

	Mode string `xml:"mode,omitempty" json:"mode,omitempty"`
}

type GetReservedSkybillWithTypeAndModeByReservationResponse struct {
	Return_ *ResultGetReservedSkybillWithTypeValue `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingWithESDOnlyV2 struct {
	EsdValue *EsdWithRefClientValueV2 `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue *ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue *RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue *RefValue `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue *SkybillValue `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValue `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	ModeRetour string `xml:"modeRetour,omitempty" json:"modeRetour,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`
}

type ShippingWithESDOnlyV2Response struct {
	Return_ *ResultReservationExpeditionValue `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingMultiParcel struct {
	EsdValue *EsdValue3 `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue []*ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue []*RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue []*RefValue `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue []*SkybillWithDimensionsValueV3 `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValueV2 `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	ModeRetour string `xml:"modeRetour,omitempty" json:"modeRetour,omitempty"`

	NumberOfParcel int32 `xml:"numberOfParcel,omitempty" json:"numberOfParcel,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`

	MultiParcel string `xml:"multiParcel,omitempty" json:"multiParcel,omitempty"`

	ScheduledValue []*ScheduledValue `xml:"scheduledValue,omitempty" json:"scheduledValue,omitempty"`
}

type ShippingMultiParcelResponse struct {
	Return_ *ResultMultiParcelExpeditionValue `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingWithReservationV2 struct {
	EsdValue *EsdWithRefClientValue `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue *ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue *RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue *RefValue `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue *SkybillValueV2 `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValue `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	ModeRetour string `xml:"modeRetour,omitempty" json:"modeRetour,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`

	ScheduledValue *ScheduledValue `xml:"scheduledValue,omitempty" json:"scheduledValue,omitempty"`
}

type ShippingWithReservationV2Response struct {
	Return_ *ResultReservationExpeditionValueV2 `xml:"return,omitempty" json:"return,omitempty"`
}

type Shipping struct {
	EsdValue *EsdValue `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue *ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue *RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue *RefValue `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue *SkybillValue `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValue `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`
}

type ShippingResponse struct {
	Return_ *ResultExpeditionValue `xml:"return,omitempty" json:"return,omitempty"`
}

type GetReservedSkybill struct {
	ReservationNumber string `xml:"reservationNumber,omitempty" json:"reservationNumber,omitempty"`
}

type GetReservedSkybillResponse struct {
	Return_ *ResultGetReservedSkybillValue `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingMultiParcelWithReservation struct {
	EsdValue *EsdWithRefClientValue `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue *ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue []*RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue []*RefValue `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue []*SkybillWithDimensionsValue `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValue `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	ModeRetour string `xml:"modeRetour,omitempty" json:"modeRetour,omitempty"`

	NumberOfParcel int32 `xml:"numberOfParcel,omitempty" json:"numberOfParcel,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`

	MultiParcel string `xml:"multiParcel,omitempty" json:"multiParcel,omitempty"`

	ScheduledValue *ScheduledValue `xml:"scheduledValue,omitempty" json:"scheduledValue,omitempty"`
}

type ShippingMultiParcelWithReservationResponse struct {
	Return_ *ResultReservationMultiParcelExpeditionValue `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingMultiParcelV4 struct {
	EsdValue *EsdValue3 `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue []*ShipperValueV2 `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue []*RecipientValueV2 `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue []*RefValueV2 `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue []*SkybillWithDimensionsValueV6 `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValueV2 `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	ModeRetour string `xml:"modeRetour,omitempty" json:"modeRetour,omitempty"`

	NumberOfParcel int32 `xml:"numberOfParcel,omitempty" json:"numberOfParcel,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`

	MultiParcel string `xml:"multiParcel,omitempty" json:"multiParcel,omitempty"`

	ScheduledValue []*ScheduledValue `xml:"scheduledValue,omitempty" json:"scheduledValue,omitempty"`

	RecipientLocalValue []*RecipientLocalValueV2 `xml:"recipientLocalValue,omitempty" json:"recipientLocalValue,omitempty"`

	CustomsValue []*CustomsValue `xml:"customsValue,omitempty" json:"customsValue,omitempty"`
}

type ShippingMultiParcelV4Response struct {
	Return_ *ResultMultiParcelExpeditionValue `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingMultiParcelV5 struct {
	EsdValue *EsdValue3 `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValueV2 `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue []*ShipperValueV2 `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue []*RecipientValueV2 `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue []*RefValueV2 `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue []*SkybillWithDimensionsValueV6 `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValueV2 `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	ModeRetour string `xml:"modeRetour,omitempty" json:"modeRetour,omitempty"`

	NumberOfParcel int32 `xml:"numberOfParcel,omitempty" json:"numberOfParcel,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`

	MultiParcel string `xml:"multiParcel,omitempty" json:"multiParcel,omitempty"`

	ScheduledValue []*ScheduledValue `xml:"scheduledValue,omitempty" json:"scheduledValue,omitempty"`

	RecipientLocalValue []*RecipientLocalValueV2 `xml:"recipientLocalValue,omitempty" json:"recipientLocalValue,omitempty"`

	CustomsValue []*CustomsValue `xml:"customsValue,omitempty" json:"customsValue,omitempty"`
}

type ShippingMultiParcelV5Response struct {
	Return_ *ResultMultiParcelExpeditionValue `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingMultiParcelWithReservationV3 struct {
	EsdValue *EsdValue3 `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue *ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue []*RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue []*RefValue `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue []*SkybillWithDimensionsValueV2 `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValue `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	ModeRetour string `xml:"modeRetour,omitempty" json:"modeRetour,omitempty"`

	NumberOfParcel int32 `xml:"numberOfParcel,omitempty" json:"numberOfParcel,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`

	MultiParcel string `xml:"multiParcel,omitempty" json:"multiParcel,omitempty"`

	ScheduledValue *ScheduledValue `xml:"scheduledValue,omitempty" json:"scheduledValue,omitempty"`
}

type ShippingMultiParcelWithReservationV3Response struct {
	Return_ *ResultReservationMultiParcelExpeditionValueV2 `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingMultiParcelV2 struct {
	EsdValue *EsdValue3 `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue []*ShipperValueV2 `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue []*RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue []*RefValue `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue []*SkybillWithDimensionsValueV4 `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValueV2 `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	ModeRetour string `xml:"modeRetour,omitempty" json:"modeRetour,omitempty"`

	NumberOfParcel int32 `xml:"numberOfParcel,omitempty" json:"numberOfParcel,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`

	MultiParcel string `xml:"multiParcel,omitempty" json:"multiParcel,omitempty"`

	ScheduledValue []*ScheduledValue `xml:"scheduledValue,omitempty" json:"scheduledValue,omitempty"`

	RecipientLocalValue []*RecipientLocalValue `xml:"recipientLocalValue,omitempty" json:"recipientLocalValue,omitempty"`

	CustomsValue []*CustomsValue `xml:"customsValue,omitempty" json:"customsValue,omitempty"`
}

type ShippingMultiParcelV2Response struct {
	Return_ *ResultMultiParcelExpeditionValue `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingV6 struct {
	EsdValue *EsdValue3 `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue *ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue *RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue *RefValue `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue *SkybillValueV2 `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValue `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`

	ScheduledValue *ScheduledValue `xml:"scheduledValue,omitempty" json:"scheduledValue,omitempty"`
}

type ShippingV6Response struct {
	Return_ *ResultExpeditionValueV3 `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingWithReservation struct {
	EsdValue *EsdValue `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue *ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue *RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue *RefValue `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue *SkybillValue `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValue `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	ModeRetour string `xml:"modeRetour,omitempty" json:"modeRetour,omitempty"`
}

type ShippingWithReservationResponse struct {
	Return_ *ResultReservationExpeditionValue `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingV7 struct {
	EsdValue *EsdValue `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue *ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue *RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue *RefValue `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue *SkybillWithDimensionsValueV3 `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValueV2 `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	CustomsValue *CustomsValue `xml:"customsValue,omitempty" json:"customsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	ModeRetour string `xml:"modeRetour,omitempty" json:"modeRetour,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`

	ScheduledValue *ScheduledValue `xml:"scheduledValue,omitempty" json:"scheduledValue,omitempty"`
}

type ShippingV7Response struct {
	Return_ *ResultMonoParcelExpeditionValue `xml:"return,omitempty" json:"return,omitempty"`
}

type RechercherContraintesEnlevement struct {
	Country string `xml:"country,omitempty" json:"country,omitempty"`

	ZipCode string `xml:"zipCode,omitempty" json:"zipCode,omitempty"`

	City string `xml:"city,omitempty" json:"city,omitempty"`
}

type RechercherContraintesEnlevementResponse struct {
	Return_ *EsdResultContraintesAgenceValue `xml:"return,omitempty" json:"return,omitempty"`
}

type AnnulerEnlevements struct {
	AccountNumber string `xml:"accountNumber,omitempty" json:"accountNumber,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	Locale string `xml:"locale,omitempty" json:"locale,omitempty"`

	EsdNumber []string `xml:"esdNumber,omitempty" json:"esdNumber,omitempty"`
}

type AnnulerEnlevementsResponse struct {
	Return_ *ResultAnnulerEnlevement `xml:"return,omitempty" json:"return,omitempty"`
}

type CreerEnlevementEurope struct {
	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	DatePassage soap.XSDDateTime `xml:"datePassage,omitempty" json:"datePassage,omitempty"`

	DonneurDOrdre *DonneurDOrdre `xml:"donneurDOrdre,omitempty" json:"donneurDOrdre,omitempty"`

	AdresseEnlevement *AdresseEnlevementV3 `xml:"adresseEnlevement,omitempty" json:"adresseEnlevement,omitempty"`

	DestinatairesEsd *DestinatairesDpd `xml:"destinatairesEsd,omitempty" json:"destinatairesEsd,omitempty"`

	Locale string `xml:"locale,omitempty" json:"locale,omitempty"`
}

type CreerEnlevementEuropeResponse struct {
	Return_ *ResultPickupOrCollectionRequest `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingWithReservationAndESDWithRefClient struct {
	EsdValue *EsdWithRefClientValue `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue *ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue *RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue *RefValue `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue *SkybillValue `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValue `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	ModeRetour string `xml:"modeRetour,omitempty" json:"modeRetour,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`

	ScheduledValue *ScheduledValue `xml:"scheduledValue,omitempty" json:"scheduledValue,omitempty"`
}

type ShippingWithReservationAndESDWithRefClientResponse struct {
	Return_ *ResultReservationExpeditionValue `xml:"return,omitempty" json:"return,omitempty"`
}

type GetReservedSkybillWithTypeAndMode struct {
	ReservationNumber string `xml:"reservationNumber,omitempty" json:"reservationNumber,omitempty"`

	Mode string `xml:"mode,omitempty" json:"mode,omitempty"`
}

type GetReservedSkybillWithTypeAndModeResponse struct {
	Return_ *ResultGetReservedSkybillWithTypeValue `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingV4 struct {
	EsdValue *EsdValue `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue *ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue *RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue *RefValue `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue *SkybillValueV2 `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValue `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`

	ScheduledValue *ScheduledValue `xml:"scheduledValue,omitempty" json:"scheduledValue,omitempty"`
}

type ShippingV4Response struct {
	Return_ *ResultExpeditionValue `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingWithReservationAndESDWithRefClientPC struct {
	RefEsdClient string `xml:"refEsdClient,omitempty" json:"refEsdClient,omitempty"`

	RetrievalDateTime string `xml:"retrievalDateTime,omitempty" json:"retrievalDateTime,omitempty"`

	ClosingDateTime string `xml:"closingDateTime,omitempty" json:"closingDateTime,omitempty"`

	SpecificInstructions string `xml:"specificInstructions,omitempty" json:"specificInstructions,omitempty"`

	Height string `xml:"height,omitempty" json:"height,omitempty"`

	Width string `xml:"width,omitempty" json:"width,omitempty"`

	Length string `xml:"length,omitempty" json:"length,omitempty"`

	ShipperCarriesCode string `xml:"shipperCarriesCode,omitempty" json:"shipperCarriesCode,omitempty"`

	ShipperBuildingFloor string `xml:"shipperBuildingFloor,omitempty" json:"shipperBuildingFloor,omitempty"`

	ShipperServiceDirection string `xml:"shipperServiceDirection,omitempty" json:"shipperServiceDirection,omitempty"`

	NombreDePassageMaximum string `xml:"nombreDePassageMaximum,omitempty" json:"nombreDePassageMaximum,omitempty"`

	LtAImprimerParChronopost string `xml:"ltAImprimerParChronopost,omitempty" json:"ltAImprimerParChronopost,omitempty"`

	Header_idEmit string `xml:"header_idEmit,omitempty" json:"header_idEmit,omitempty"`

	AccountNumber string `xml:"accountNumber,omitempty" json:"accountNumber,omitempty"`

	SubAccount string `xml:"subAccount,omitempty" json:"subAccount,omitempty"`

	Header_identWebPro string `xml:"header_identWebPro,omitempty" json:"header_identWebPro,omitempty"`

	ShipperCivility string `xml:"shipperCivility,omitempty" json:"shipperCivility,omitempty"`

	ShipperName string `xml:"shipperName,omitempty" json:"shipperName,omitempty"`

	ShipperName2 string `xml:"shipperName2,omitempty" json:"shipperName2,omitempty"`

	ShipperAdress1 string `xml:"shipperAdress1,omitempty" json:"shipperAdress1,omitempty"`

	ShipperAdress2 string `xml:"shipperAdress2,omitempty" json:"shipperAdress2,omitempty"`

	ShipperZipCode string `xml:"shipperZipCode,omitempty" json:"shipperZipCode,omitempty"`

	ShipperCity string `xml:"shipperCity,omitempty" json:"shipperCity,omitempty"`

	ShipperCountry string `xml:"shipperCountry,omitempty" json:"shipperCountry,omitempty"`

	ShipperCountryName string `xml:"shipperCountryName,omitempty" json:"shipperCountryName,omitempty"`

	ShipperContactName string `xml:"shipperContactName,omitempty" json:"shipperContactName,omitempty"`

	ShipperEmail string `xml:"shipperEmail,omitempty" json:"shipperEmail,omitempty"`

	ShipperPhone string `xml:"shipperPhone,omitempty" json:"shipperPhone,omitempty"`

	ShipperMobilePhone string `xml:"shipperMobilePhone,omitempty" json:"shipperMobilePhone,omitempty"`

	CustomerCivility string `xml:"customerCivility,omitempty" json:"customerCivility,omitempty"`

	CustomerName string `xml:"customerName,omitempty" json:"customerName,omitempty"`

	CustomerName2 string `xml:"customerName2,omitempty" json:"customerName2,omitempty"`

	CustomerAdress1 string `xml:"customerAdress1,omitempty" json:"customerAdress1,omitempty"`

	CustomerAdress2 string `xml:"customerAdress2,omitempty" json:"customerAdress2,omitempty"`

	CustomerZipCode string `xml:"customerZipCode,omitempty" json:"customerZipCode,omitempty"`

	CustomerCity string `xml:"customerCity,omitempty" json:"customerCity,omitempty"`

	CustomerCountry string `xml:"customerCountry,omitempty" json:"customerCountry,omitempty"`

	CustomerCountryName string `xml:"customerCountryName,omitempty" json:"customerCountryName,omitempty"`

	CustomerContactName string `xml:"customerContactName,omitempty" json:"customerContactName,omitempty"`

	CustomerEmail string `xml:"customerEmail,omitempty" json:"customerEmail,omitempty"`

	CustomerPhone string `xml:"customerPhone,omitempty" json:"customerPhone,omitempty"`

	CustomerMobilePhone string `xml:"customerMobilePhone,omitempty" json:"customerMobilePhone,omitempty"`

	CustomerPreAlert string `xml:"customerPreAlert,omitempty" json:"customerPreAlert,omitempty"`

	RecipientCivility string `xml:"recipientCivility,omitempty" json:"recipientCivility,omitempty"`

	RecipientName string `xml:"recipientName,omitempty" json:"recipientName,omitempty"`

	RecipientName2 string `xml:"recipientName2,omitempty" json:"recipientName2,omitempty"`

	RecipientAdress1 string `xml:"recipientAdress1,omitempty" json:"recipientAdress1,omitempty"`

	RecipientAdress2 string `xml:"recipientAdress2,omitempty" json:"recipientAdress2,omitempty"`

	RecipientZipCode string `xml:"recipientZipCode,omitempty" json:"recipientZipCode,omitempty"`

	RecipientCity string `xml:"recipientCity,omitempty" json:"recipientCity,omitempty"`

	RecipientCountry string `xml:"recipientCountry,omitempty" json:"recipientCountry,omitempty"`

	RecipientCountryName string `xml:"recipientCountryName,omitempty" json:"recipientCountryName,omitempty"`

	RecipientContactName string `xml:"recipientContactName,omitempty" json:"recipientContactName,omitempty"`

	RecipientEmail string `xml:"recipientEmail,omitempty" json:"recipientEmail,omitempty"`

	RecipientPhone string `xml:"recipientPhone,omitempty" json:"recipientPhone,omitempty"`

	RecipientMobilePhone string `xml:"recipientMobilePhone,omitempty" json:"recipientMobilePhone,omitempty"`

	RecipientPreAlert string `xml:"recipientPreAlert,omitempty" json:"recipientPreAlert,omitempty"`

	ShipperRef string `xml:"shipperRef,omitempty" json:"shipperRef,omitempty"`

	RecipientRef string `xml:"recipientRef,omitempty" json:"recipientRef,omitempty"`

	CustomerSkybillNumber string `xml:"customerSkybillNumber,omitempty" json:"customerSkybillNumber,omitempty"`

	EvtCode string `xml:"evtCode,omitempty" json:"evtCode,omitempty"`

	ProductCode string `xml:"productCode,omitempty" json:"productCode,omitempty"`

	ShipDate string `xml:"shipDate,omitempty" json:"shipDate,omitempty"`

	ShipHour string `xml:"shipHour,omitempty" json:"shipHour,omitempty"`

	Weight string `xml:"weight,omitempty" json:"weight,omitempty"`

	WeightUnit string `xml:"weightUnit,omitempty" json:"weightUnit,omitempty"`

	InsuredValue string `xml:"insuredValue,omitempty" json:"insuredValue,omitempty"`

	InsuredCurrency string `xml:"insuredCurrency,omitempty" json:"insuredCurrency,omitempty"`

	CodValue string `xml:"codValue,omitempty" json:"codValue,omitempty"`

	CodCurrency string `xml:"codCurrency,omitempty" json:"codCurrency,omitempty"`

	CustomsValue string `xml:"customsValue,omitempty" json:"customsValue,omitempty"`

	CustomsCurrency string `xml:"customsCurrency,omitempty" json:"customsCurrency,omitempty"`

	Service string `xml:"service,omitempty" json:"service,omitempty"`

	As string `xml:"as,omitempty" json:"as,omitempty"`

	ObjectType string `xml:"objectType,omitempty" json:"objectType,omitempty"`

	Content1 string `xml:"content1,omitempty" json:"content1,omitempty"`

	Content2 string `xml:"content2,omitempty" json:"content2,omitempty"`

	Content3 string `xml:"content3,omitempty" json:"content3,omitempty"`

	Content4 string `xml:"content4,omitempty" json:"content4,omitempty"`

	Content5 string `xml:"content5,omitempty" json:"content5,omitempty"`

	PortValue string `xml:"portValue,omitempty" json:"portValue,omitempty"`

	PortCurrency string `xml:"portCurrency,omitempty" json:"portCurrency,omitempty"`

	SkybillRank string `xml:"skybillRank,omitempty" json:"skybillRank,omitempty"`

	BulkNumber string `xml:"bulkNumber,omitempty" json:"bulkNumber,omitempty"`

	Mode string `xml:"mode,omitempty" json:"mode,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	ModeRetour string `xml:"modeRetour,omitempty" json:"modeRetour,omitempty"`

	TimeSlotStartDate string `xml:"timeSlotStartDate,omitempty" json:"timeSlotStartDate,omitempty"`

	TimeSlotEndDate string `xml:"timeSlotEndDate,omitempty" json:"timeSlotEndDate,omitempty"`

	TimeSlotTariffLevel string `xml:"timeSlotTariffLevel,omitempty" json:"timeSlotTariffLevel,omitempty"`

	ExpirationDate string `xml:"expirationDate,omitempty" json:"expirationDate,omitempty"`

	SellByDate string `xml:"sellByDate,omitempty" json:"sellByDate,omitempty"`
}

type ShippingWithReservationAndESDWithRefClientPCResponse struct {
	Return_ *ResultReservationExpeditionValue `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingV5 struct {
	EsdValue *EsdValue3 `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue *ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue *RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue *RefValue `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue *SkybillValueV2 `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValue `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`

	ScheduledValue *ScheduledValue `xml:"scheduledValue,omitempty" json:"scheduledValue,omitempty"`
}

type ShippingV5Response struct {
	Return_ *ResultExpeditionValue `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingMultiParcelWithReservationV2 struct {
	EsdValue *EsdWithRefClientValue `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue *ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue []*RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue []*RefValue `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue []*SkybillWithDimensionsValueV2 `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValue `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	ModeRetour string `xml:"modeRetour,omitempty" json:"modeRetour,omitempty"`

	NumberOfParcel int32 `xml:"numberOfParcel,omitempty" json:"numberOfParcel,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`

	MultiParcel string `xml:"multiParcel,omitempty" json:"multiParcel,omitempty"`

	ScheduledValue *ScheduledValue `xml:"scheduledValue,omitempty" json:"scheduledValue,omitempty"`
}

type ShippingMultiParcelWithReservationV2Response struct {
	Return_ *ResultReservationMultiParcelExpeditionValueV2 `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingWithESDOnly struct {
	EsdValue *EsdWithRefClientValue `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue *ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue *RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue *RefValue `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue *SkybillValue `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValue `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	ModeRetour string `xml:"modeRetour,omitempty" json:"modeRetour,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`
}

type ShippingWithESDOnlyResponse struct {
	Return_ *ResultReservationExpeditionValue `xml:"return,omitempty" json:"return,omitempty"`
}

type GetShippingInformation struct {
	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue *ShipperValue `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	RecipientValue *RecipientValue `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	SkybillValueBase *SkybillValueBase `xml:"skybillValueBase,omitempty" json:"skybillValueBase,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`
}

type GetShippingInformationResponse struct {
	Return_ *ResultShippingInfo `xml:"return,omitempty" json:"return,omitempty"`
}

type GetRouting struct {
	AccountNumber string `xml:"accountNumber,omitempty" json:"accountNumber,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	ShipperDepot string `xml:"shipperDepot,omitempty" json:"shipperDepot,omitempty"`

	CountryCode string `xml:"countryCode,omitempty" json:"countryCode,omitempty"`

	ZipCode string `xml:"zipCode,omitempty" json:"zipCode,omitempty"`

	Socode string `xml:"socode,omitempty" json:"socode,omitempty"`

	Ascode string `xml:"ascode,omitempty" json:"ascode,omitempty"`
}

type GetRoutingResponse struct {
	Return_ *ResultGetRouting `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingMultiParcelV3 struct {
	EsdValue *EsdValue3 `xml:"esdValue,omitempty" json:"esdValue,omitempty"`

	HeaderValue *HeaderValue `xml:"headerValue,omitempty" json:"headerValue,omitempty"`

	ShipperValue []*ShipperValueV2 `xml:"shipperValue,omitempty" json:"shipperValue,omitempty"`

	CustomerValue *CustomerValue `xml:"customerValue,omitempty" json:"customerValue,omitempty"`

	RecipientValue []*RecipientValueV2 `xml:"recipientValue,omitempty" json:"recipientValue,omitempty"`

	RefValue []*RefValueV2 `xml:"refValue,omitempty" json:"refValue,omitempty"`

	SkybillValue []*SkybillWithDimensionsValueV5 `xml:"skybillValue,omitempty" json:"skybillValue,omitempty"`

	SkybillParamsValue *SkybillParamsValueV2 `xml:"skybillParamsValue,omitempty" json:"skybillParamsValue,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	ModeRetour string `xml:"modeRetour,omitempty" json:"modeRetour,omitempty"`

	NumberOfParcel int32 `xml:"numberOfParcel,omitempty" json:"numberOfParcel,omitempty"`

	Version string `xml:"version,omitempty" json:"version,omitempty"`

	MultiParcel string `xml:"multiParcel,omitempty" json:"multiParcel,omitempty"`

	ScheduledValue []*ScheduledValue `xml:"scheduledValue,omitempty" json:"scheduledValue,omitempty"`

	RecipientLocalValue []*RecipientLocalValueV2 `xml:"recipientLocalValue,omitempty" json:"recipientLocalValue,omitempty"`

	CustomsValue []*CustomsValue `xml:"customsValue,omitempty" json:"customsValue,omitempty"`
}

type ShippingMultiParcelV3Response struct {
	Return_ *ResultMultiParcelExpeditionValue `xml:"return,omitempty" json:"return,omitempty"`
}

type ShippingServiceWS interface {
	FaisabiliteESD(request *FaisabiliteESD) (*FaisabiliteESDResponse, error)

	FaisabiliteESDContext(ctx context.Context, request *FaisabiliteESD) (*FaisabiliteESDResponse, error)

	ShippingV2(request *ShippingV2) (*ShippingV2Response, error)

	ShippingV2Context(ctx context.Context, request *ShippingV2) (*ShippingV2Response, error)

	GetReservedSkybillWithTypeAndModeAuth(request *GetReservedSkybillWithTypeAndModeAuth) (*GetReservedSkybillWithTypeAndModeAuthResponse, error)

	GetReservedSkybillWithTypeAndModeAuthContext(ctx context.Context, request *GetReservedSkybillWithTypeAndModeAuth) (*GetReservedSkybillWithTypeAndModeAuthResponse, error)

	GetReservedSkybillWithType(request *GetReservedSkybillWithType) (*GetReservedSkybillWithTypeResponse, error)

	GetReservedSkybillWithTypeContext(ctx context.Context, request *GetReservedSkybillWithType) (*GetReservedSkybillWithTypeResponse, error)

	CreerEnlevementNational(request *CreerEnlevementNational) (*CreerEnlevementNationalResponse, error)

	CreerEnlevementNationalContext(ctx context.Context, request *CreerEnlevementNational) (*CreerEnlevementNationalResponse, error)

	ShippingV3(request *ShippingV3) (*ShippingV3Response, error)

	ShippingV3Context(ctx context.Context, request *ShippingV3) (*ShippingV3Response, error)

	GetReservedSkybillWithTypeAndModeByReservation(request *GetReservedSkybillWithTypeAndModeByReservation) (*GetReservedSkybillWithTypeAndModeByReservationResponse, error)

	GetReservedSkybillWithTypeAndModeByReservationContext(ctx context.Context, request *GetReservedSkybillWithTypeAndModeByReservation) (*GetReservedSkybillWithTypeAndModeByReservationResponse, error)

	ShippingWithESDOnlyV2(request *ShippingWithESDOnlyV2) (*ShippingWithESDOnlyV2Response, error)

	ShippingWithESDOnlyV2Context(ctx context.Context, request *ShippingWithESDOnlyV2) (*ShippingWithESDOnlyV2Response, error)

	ShippingMultiParcel(request *ShippingMultiParcel) (*ShippingMultiParcelResponse, error)

	ShippingMultiParcelContext(ctx context.Context, request *ShippingMultiParcel) (*ShippingMultiParcelResponse, error)

	ShippingWithReservationV2(request *ShippingWithReservationV2) (*ShippingWithReservationV2Response, error)

	ShippingWithReservationV2Context(ctx context.Context, request *ShippingWithReservationV2) (*ShippingWithReservationV2Response, error)

	Shipping(request *Shipping) (*ShippingResponse, error)

	ShippingContext(ctx context.Context, request *Shipping) (*ShippingResponse, error)

	GetReservedSkybill(request *GetReservedSkybill) (*GetReservedSkybillResponse, error)

	GetReservedSkybillContext(ctx context.Context, request *GetReservedSkybill) (*GetReservedSkybillResponse, error)

	ShippingMultiParcelWithReservation(request *ShippingMultiParcelWithReservation) (*ShippingMultiParcelWithReservationResponse, error)

	ShippingMultiParcelWithReservationContext(ctx context.Context, request *ShippingMultiParcelWithReservation) (*ShippingMultiParcelWithReservationResponse, error)

	ShippingMultiParcelV4(request *ShippingMultiParcelV4) (*ShippingMultiParcelV4Response, error)

	ShippingMultiParcelV4Context(ctx context.Context, request *ShippingMultiParcelV4) (*ShippingMultiParcelV4Response, error)

	ShippingMultiParcelV5(request *ShippingMultiParcelV5) (*ShippingMultiParcelV5Response, error)

	ShippingMultiParcelV5Context(ctx context.Context, request *ShippingMultiParcelV5) (*ShippingMultiParcelV5Response, error)

	ShippingMultiParcelWithReservationV3(request *ShippingMultiParcelWithReservationV3) (*ShippingMultiParcelWithReservationV3Response, error)

	ShippingMultiParcelWithReservationV3Context(ctx context.Context, request *ShippingMultiParcelWithReservationV3) (*ShippingMultiParcelWithReservationV3Response, error)

	ShippingMultiParcelV2(request *ShippingMultiParcelV2) (*ShippingMultiParcelV2Response, error)

	ShippingMultiParcelV2Context(ctx context.Context, request *ShippingMultiParcelV2) (*ShippingMultiParcelV2Response, error)

	ShippingV6(request *ShippingV6) (*ShippingV6Response, error)

	ShippingV6Context(ctx context.Context, request *ShippingV6) (*ShippingV6Response, error)

	ShippingWithReservation(request *ShippingWithReservation) (*ShippingWithReservationResponse, error)

	ShippingWithReservationContext(ctx context.Context, request *ShippingWithReservation) (*ShippingWithReservationResponse, error)

	ShippingV7(request *ShippingV7) (*ShippingV7Response, error)

	ShippingV7Context(ctx context.Context, request *ShippingV7) (*ShippingV7Response, error)

	RechercherContraintesEnlevement(request *RechercherContraintesEnlevement) (*RechercherContraintesEnlevementResponse, error)

	RechercherContraintesEnlevementContext(ctx context.Context, request *RechercherContraintesEnlevement) (*RechercherContraintesEnlevementResponse, error)

	AnnulerEnlevements(request *AnnulerEnlevements) (*AnnulerEnlevementsResponse, error)

	AnnulerEnlevementsContext(ctx context.Context, request *AnnulerEnlevements) (*AnnulerEnlevementsResponse, error)

	CreerEnlevementEurope(request *CreerEnlevementEurope) (*CreerEnlevementEuropeResponse, error)

	CreerEnlevementEuropeContext(ctx context.Context, request *CreerEnlevementEurope) (*CreerEnlevementEuropeResponse, error)

	ShippingWithReservationAndESDWithRefClient(request *ShippingWithReservationAndESDWithRefClient) (*ShippingWithReservationAndESDWithRefClientResponse, error)

	ShippingWithReservationAndESDWithRefClientContext(ctx context.Context, request *ShippingWithReservationAndESDWithRefClient) (*ShippingWithReservationAndESDWithRefClientResponse, error)

	GetReservedSkybillWithTypeAndMode(request *GetReservedSkybillWithTypeAndMode) (*GetReservedSkybillWithTypeAndModeResponse, error)

	GetReservedSkybillWithTypeAndModeContext(ctx context.Context, request *GetReservedSkybillWithTypeAndMode) (*GetReservedSkybillWithTypeAndModeResponse, error)

	ShippingV4(request *ShippingV4) (*ShippingV4Response, error)

	ShippingV4Context(ctx context.Context, request *ShippingV4) (*ShippingV4Response, error)

	ShippingWithReservationAndESDWithRefClientPC(request *ShippingWithReservationAndESDWithRefClientPC) (*ShippingWithReservationAndESDWithRefClientPCResponse, error)

	ShippingWithReservationAndESDWithRefClientPCContext(ctx context.Context, request *ShippingWithReservationAndESDWithRefClientPC) (*ShippingWithReservationAndESDWithRefClientPCResponse, error)

	ShippingV5(request *ShippingV5) (*ShippingV5Response, error)

	ShippingV5Context(ctx context.Context, request *ShippingV5) (*ShippingV5Response, error)

	ShippingMultiParcelWithReservationV2(request *ShippingMultiParcelWithReservationV2) (*ShippingMultiParcelWithReservationV2Response, error)

	ShippingMultiParcelWithReservationV2Context(ctx context.Context, request *ShippingMultiParcelWithReservationV2) (*ShippingMultiParcelWithReservationV2Response, error)

	ShippingWithESDOnly(request *ShippingWithESDOnly) (*ShippingWithESDOnlyResponse, error)

	ShippingWithESDOnlyContext(ctx context.Context, request *ShippingWithESDOnly) (*ShippingWithESDOnlyResponse, error)

	GetShippingInformation(request *GetShippingInformation) (*GetShippingInformationResponse, error)

	GetShippingInformationContext(ctx context.Context, request *GetShippingInformation) (*GetShippingInformationResponse, error)

	GetRouting(request *GetRouting) (*GetRoutingResponse, error)

	GetRoutingContext(ctx context.Context, request *GetRouting) (*GetRoutingResponse, error)

	ShippingMultiParcelV3(request *ShippingMultiParcelV3) (*ShippingMultiParcelV3Response, error)

	ShippingMultiParcelV3Context(ctx context.Context, request *ShippingMultiParcelV3) (*ShippingMultiParcelV3Response, error)
}

type shippingServiceWS struct {
	client *soap.Client
}

func NewShippingServiceWS(client *soap.Client) ShippingServiceWS {
	return &shippingServiceWS{
		client: client,
	}
}

func (service *shippingServiceWS) FaisabiliteESDContext(ctx context.Context, request *FaisabiliteESD) (*FaisabiliteESDResponse, error) {
	response := new(FaisabiliteESDResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) FaisabiliteESD(request *FaisabiliteESD) (*FaisabiliteESDResponse, error) {
	return service.FaisabiliteESDContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingV2Context(ctx context.Context, request *ShippingV2) (*ShippingV2Response, error) {
	response := new(ShippingV2Response)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingV2(request *ShippingV2) (*ShippingV2Response, error) {
	return service.ShippingV2Context(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) GetReservedSkybillWithTypeAndModeAuthContext(ctx context.Context, request *GetReservedSkybillWithTypeAndModeAuth) (*GetReservedSkybillWithTypeAndModeAuthResponse, error) {
	response := new(GetReservedSkybillWithTypeAndModeAuthResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) GetReservedSkybillWithTypeAndModeAuth(request *GetReservedSkybillWithTypeAndModeAuth) (*GetReservedSkybillWithTypeAndModeAuthResponse, error) {
	return service.GetReservedSkybillWithTypeAndModeAuthContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) GetReservedSkybillWithTypeContext(ctx context.Context, request *GetReservedSkybillWithType) (*GetReservedSkybillWithTypeResponse, error) {
	response := new(GetReservedSkybillWithTypeResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) GetReservedSkybillWithType(request *GetReservedSkybillWithType) (*GetReservedSkybillWithTypeResponse, error) {
	return service.GetReservedSkybillWithTypeContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) CreerEnlevementNationalContext(ctx context.Context, request *CreerEnlevementNational) (*CreerEnlevementNationalResponse, error) {
	response := new(CreerEnlevementNationalResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) CreerEnlevementNational(request *CreerEnlevementNational) (*CreerEnlevementNationalResponse, error) {
	return service.CreerEnlevementNationalContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingV3Context(ctx context.Context, request *ShippingV3) (*ShippingV3Response, error) {
	response := new(ShippingV3Response)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingV3(request *ShippingV3) (*ShippingV3Response, error) {
	return service.ShippingV3Context(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) GetReservedSkybillWithTypeAndModeByReservationContext(ctx context.Context, request *GetReservedSkybillWithTypeAndModeByReservation) (*GetReservedSkybillWithTypeAndModeByReservationResponse, error) {
	response := new(GetReservedSkybillWithTypeAndModeByReservationResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) GetReservedSkybillWithTypeAndModeByReservation(request *GetReservedSkybillWithTypeAndModeByReservation) (*GetReservedSkybillWithTypeAndModeByReservationResponse, error) {
	return service.GetReservedSkybillWithTypeAndModeByReservationContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingWithESDOnlyV2Context(ctx context.Context, request *ShippingWithESDOnlyV2) (*ShippingWithESDOnlyV2Response, error) {
	response := new(ShippingWithESDOnlyV2Response)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingWithESDOnlyV2(request *ShippingWithESDOnlyV2) (*ShippingWithESDOnlyV2Response, error) {
	return service.ShippingWithESDOnlyV2Context(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingMultiParcelContext(ctx context.Context, request *ShippingMultiParcel) (*ShippingMultiParcelResponse, error) {
	response := new(ShippingMultiParcelResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingMultiParcel(request *ShippingMultiParcel) (*ShippingMultiParcelResponse, error) {
	return service.ShippingMultiParcelContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingWithReservationV2Context(ctx context.Context, request *ShippingWithReservationV2) (*ShippingWithReservationV2Response, error) {
	response := new(ShippingWithReservationV2Response)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingWithReservationV2(request *ShippingWithReservationV2) (*ShippingWithReservationV2Response, error) {
	return service.ShippingWithReservationV2Context(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingContext(ctx context.Context, request *Shipping) (*ShippingResponse, error) {
	response := new(ShippingResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) Shipping(request *Shipping) (*ShippingResponse, error) {
	return service.ShippingContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) GetReservedSkybillContext(ctx context.Context, request *GetReservedSkybill) (*GetReservedSkybillResponse, error) {
	response := new(GetReservedSkybillResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) GetReservedSkybill(request *GetReservedSkybill) (*GetReservedSkybillResponse, error) {
	return service.GetReservedSkybillContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingMultiParcelWithReservationContext(ctx context.Context, request *ShippingMultiParcelWithReservation) (*ShippingMultiParcelWithReservationResponse, error) {
	response := new(ShippingMultiParcelWithReservationResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingMultiParcelWithReservation(request *ShippingMultiParcelWithReservation) (*ShippingMultiParcelWithReservationResponse, error) {
	return service.ShippingMultiParcelWithReservationContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingMultiParcelV4Context(ctx context.Context, request *ShippingMultiParcelV4) (*ShippingMultiParcelV4Response, error) {
	response := new(ShippingMultiParcelV4Response)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingMultiParcelV4(request *ShippingMultiParcelV4) (*ShippingMultiParcelV4Response, error) {
	return service.ShippingMultiParcelV4Context(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingMultiParcelV5Context(ctx context.Context, request *ShippingMultiParcelV5) (*ShippingMultiParcelV5Response, error) {
	response := new(ShippingMultiParcelV5Response)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingMultiParcelV5(request *ShippingMultiParcelV5) (*ShippingMultiParcelV5Response, error) {
	return service.ShippingMultiParcelV5Context(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingMultiParcelWithReservationV3Context(ctx context.Context, request *ShippingMultiParcelWithReservationV3) (*ShippingMultiParcelWithReservationV3Response, error) {
	response := new(ShippingMultiParcelWithReservationV3Response)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingMultiParcelWithReservationV3(request *ShippingMultiParcelWithReservationV3) (*ShippingMultiParcelWithReservationV3Response, error) {
	return service.ShippingMultiParcelWithReservationV3Context(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingMultiParcelV2Context(ctx context.Context, request *ShippingMultiParcelV2) (*ShippingMultiParcelV2Response, error) {
	response := new(ShippingMultiParcelV2Response)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingMultiParcelV2(request *ShippingMultiParcelV2) (*ShippingMultiParcelV2Response, error) {
	return service.ShippingMultiParcelV2Context(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingV6Context(ctx context.Context, request *ShippingV6) (*ShippingV6Response, error) {
	response := new(ShippingV6Response)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingV6(request *ShippingV6) (*ShippingV6Response, error) {
	return service.ShippingV6Context(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingWithReservationContext(ctx context.Context, request *ShippingWithReservation) (*ShippingWithReservationResponse, error) {
	response := new(ShippingWithReservationResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingWithReservation(request *ShippingWithReservation) (*ShippingWithReservationResponse, error) {
	return service.ShippingWithReservationContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingV7Context(ctx context.Context, request *ShippingV7) (*ShippingV7Response, error) {
	response := new(ShippingV7Response)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingV7(request *ShippingV7) (*ShippingV7Response, error) {
	return service.ShippingV7Context(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) RechercherContraintesEnlevementContext(ctx context.Context, request *RechercherContraintesEnlevement) (*RechercherContraintesEnlevementResponse, error) {
	response := new(RechercherContraintesEnlevementResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) RechercherContraintesEnlevement(request *RechercherContraintesEnlevement) (*RechercherContraintesEnlevementResponse, error) {
	return service.RechercherContraintesEnlevementContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) AnnulerEnlevementsContext(ctx context.Context, request *AnnulerEnlevements) (*AnnulerEnlevementsResponse, error) {
	response := new(AnnulerEnlevementsResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) AnnulerEnlevements(request *AnnulerEnlevements) (*AnnulerEnlevementsResponse, error) {
	return service.AnnulerEnlevementsContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) CreerEnlevementEuropeContext(ctx context.Context, request *CreerEnlevementEurope) (*CreerEnlevementEuropeResponse, error) {
	response := new(CreerEnlevementEuropeResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) CreerEnlevementEurope(request *CreerEnlevementEurope) (*CreerEnlevementEuropeResponse, error) {
	return service.CreerEnlevementEuropeContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingWithReservationAndESDWithRefClientContext(ctx context.Context, request *ShippingWithReservationAndESDWithRefClient) (*ShippingWithReservationAndESDWithRefClientResponse, error) {
	response := new(ShippingWithReservationAndESDWithRefClientResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingWithReservationAndESDWithRefClient(request *ShippingWithReservationAndESDWithRefClient) (*ShippingWithReservationAndESDWithRefClientResponse, error) {
	return service.ShippingWithReservationAndESDWithRefClientContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) GetReservedSkybillWithTypeAndModeContext(ctx context.Context, request *GetReservedSkybillWithTypeAndMode) (*GetReservedSkybillWithTypeAndModeResponse, error) {
	response := new(GetReservedSkybillWithTypeAndModeResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) GetReservedSkybillWithTypeAndMode(request *GetReservedSkybillWithTypeAndMode) (*GetReservedSkybillWithTypeAndModeResponse, error) {
	return service.GetReservedSkybillWithTypeAndModeContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingV4Context(ctx context.Context, request *ShippingV4) (*ShippingV4Response, error) {
	response := new(ShippingV4Response)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingV4(request *ShippingV4) (*ShippingV4Response, error) {
	return service.ShippingV4Context(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingWithReservationAndESDWithRefClientPCContext(ctx context.Context, request *ShippingWithReservationAndESDWithRefClientPC) (*ShippingWithReservationAndESDWithRefClientPCResponse, error) {
	response := new(ShippingWithReservationAndESDWithRefClientPCResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingWithReservationAndESDWithRefClientPC(request *ShippingWithReservationAndESDWithRefClientPC) (*ShippingWithReservationAndESDWithRefClientPCResponse, error) {
	return service.ShippingWithReservationAndESDWithRefClientPCContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingV5Context(ctx context.Context, request *ShippingV5) (*ShippingV5Response, error) {
	response := new(ShippingV5Response)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingV5(request *ShippingV5) (*ShippingV5Response, error) {
	return service.ShippingV5Context(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingMultiParcelWithReservationV2Context(ctx context.Context, request *ShippingMultiParcelWithReservationV2) (*ShippingMultiParcelWithReservationV2Response, error) {
	response := new(ShippingMultiParcelWithReservationV2Response)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingMultiParcelWithReservationV2(request *ShippingMultiParcelWithReservationV2) (*ShippingMultiParcelWithReservationV2Response, error) {
	return service.ShippingMultiParcelWithReservationV2Context(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingWithESDOnlyContext(ctx context.Context, request *ShippingWithESDOnly) (*ShippingWithESDOnlyResponse, error) {
	response := new(ShippingWithESDOnlyResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingWithESDOnly(request *ShippingWithESDOnly) (*ShippingWithESDOnlyResponse, error) {
	return service.ShippingWithESDOnlyContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) GetShippingInformationContext(ctx context.Context, request *GetShippingInformation) (*GetShippingInformationResponse, error) {
	response := new(GetShippingInformationResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) GetShippingInformation(request *GetShippingInformation) (*GetShippingInformationResponse, error) {
	return service.GetShippingInformationContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) GetRoutingContext(ctx context.Context, request *GetRouting) (*GetRoutingResponse, error) {
	response := new(GetRoutingResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) GetRouting(request *GetRouting) (*GetRoutingResponse, error) {
	return service.GetRoutingContext(
		context.Background(),
		request,
	)
}

func (service *shippingServiceWS) ShippingMultiParcelV3Context(ctx context.Context, request *ShippingMultiParcelV3) (*ShippingMultiParcelV3Response, error) {
	response := new(ShippingMultiParcelV3Response)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *shippingServiceWS) ShippingMultiParcelV3(request *ShippingMultiParcelV3) (*ShippingMultiParcelV3Response, error) {
	return service.ShippingMultiParcelV3Context(
		context.Background(),
		request,
	)
}
